// <auto-generated />
using System;
using EFCore.TimeTravelerTests.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCore.TimeTravelerTests.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191209231909_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCore.TimeTravelerTests.Apple", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FruitStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Apple");
                });

            modelBuilder.Entity("EFCore.TimeTravelerTests.Worm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppleId");

                    b.ToTable("Worm");
                });

            modelBuilder.Entity("EFCore.TimeTravelerTests.Worm", b =>
                {
                    b.HasOne("EFCore.TimeTravelerTests.Apple", "Apple")
                        .WithMany("Worms")
                        .HasForeignKey("AppleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
